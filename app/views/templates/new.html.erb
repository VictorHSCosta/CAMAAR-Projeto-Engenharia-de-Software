<% content_for :title, "Criar Novo Template" %>

<div class="container-fluid py-4">
  <div class="row">
    <div class="col-12">
      <!-- Header -->
      <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
          <h2 class="mb-1">
            <i class="fas fa-plus-circle me-2 text-primary"></i>
            Criar Novo Template
          </h2>
          <p class="text-muted mb-0">Crie um template de avaliação para alunos ou professores</p>
        </div>
        
        <%= link_to templates_path, class: "btn btn-outline-secondary" do %>
          <i class="fas fa-arrow-left me-2"></i>
          Voltar
        <% end %>
      </div>

      <div class="card">
        <div class="card-header">
          <h5 class="card-title mb-0">
            <i class="fas fa-edit me-2"></i>
            Informações do Template
          </h5>
        </div>
        <div class="card-body">
          <%= form_with model: @template, local: true, data: { turbo: false } do |form| %>
            <% if @template.errors.any? %>
              <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <strong>Erro ao criar template:</strong>
                <ul class="mb-0 mt-2">
                  <% @template.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
              </div>
            <% end %>

            <!-- Informações Básicas -->
            <div class="row mb-4">
              <div class="col-md-8">
                <div class="mb-3">
                  <%= form.label :titulo, class: "form-label fw-bold" %>
                  <div class="input-group">
                    <span class="input-group-text">
                      <i class="fas fa-file-alt text-muted"></i>
                    </span>
                    <%= form.text_field :titulo, class: "form-control", placeholder: "Digite o título do template" %>
                  </div>
                </div>

                <div class="mb-3">
                  <%= form.label :descricao, class: "form-label fw-bold" %>
                  <%= form.text_area :descricao, rows: 3, class: "form-control", placeholder: "Descreva o objetivo deste template" %>
                </div>
              </div>

              <div class="col-md-4">
                <div class="mb-3">
                  <%= form.label :publico_alvo, class: "form-label fw-bold" %>
                  <div class="input-group">
                    <span class="input-group-text">
                      <i class="fas fa-users text-muted"></i>
                    </span>
                    <%= form.select :publico_alvo, 
                                    options_for_select([
                                      ["Alunos", "alunos"],
                                      ["Professores", "professores"]
                                    ]), 
                                    { prompt: "Selecione o público" }, 
                                    { class: "form-select" } %>
                  </div>
                </div>

                <div class="mb-3">
                  <%= form.label :disciplina_id, class: "form-label fw-bold" %>
                  <div class="input-group">
                    <span class="input-group-text">
                      <i class="fas fa-book text-muted"></i>
                    </span>
                    <%= form.select :disciplina_id, 
                                    options_from_collection_for_select(current_user.disciplinas, :id, :nome), 
                                    { prompt: "Selecione a disciplina" }, 
                                    { class: "form-select" } %>
                  </div>
                </div>
              </div>
            </div>

            <!-- Perguntas -->
            <div class="border-top pt-4">
              <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="mb-0">
                  <i class="fas fa-question-circle me-2"></i>
                  Perguntas do Template
                </h5>
                <button type="button" class="btn btn-outline-primary btn-sm" id="add-pergunta">
                  <i class="fas fa-plus me-2"></i>
                  Adicionar Pergunta
                </button>
              </div>

              <div id="perguntas-container">
                <!-- Perguntas serão adicionadas dinamicamente aqui -->
              </div>
            </div>

            <!-- Botões de Ação -->
            <div class="border-top pt-4 mt-4">
              <div class="d-flex justify-content-between">
                <div>
                  <%= link_to templates_path, class: "btn btn-outline-secondary" do %>
                    <i class="fas fa-times me-2"></i>
                    Cancelar
                  <% end %>
                </div>
                <div>
                  <%= form.submit "Criar Template", class: "btn btn-primary" %>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Templates para JavaScript -->
<template id="pergunta-template">
  <div class="pergunta-item border rounded p-3 mb-3 bg-light">
    <div class="d-flex justify-content-between align-items-start mb-3">
      <h6 class="mb-0">
        <i class="fas fa-question-circle me-2"></i>
        Pergunta <span class="pergunta-number"></span>
      </h6>
      <button type="button" class="btn btn-outline-danger btn-sm remove-pergunta">
        <i class="fas fa-trash"></i>
      </button>
    </div>

    <div class="row">
      <div class="col-md-8">
        <div class="mb-3">
          <label class="form-label fw-bold">Texto da Pergunta</label>
          <textarea class="form-control pergunta-texto" rows="2" placeholder="Digite a pergunta..."></textarea>
        </div>
      </div>
      <div class="col-md-4">
        <div class="mb-3">
          <label class="form-label fw-bold">Tipo de Pergunta</label>
          <select class="form-select pergunta-tipo">
            <option value="verdadeiro_falso">Verdadeiro/Falso</option>
            <option value="multipla_escolha">Múltipla Escolha</option>
            <option value="subjetiva">Subjetiva</option>
          </select>
        </div>
      </div>
    </div>

    <div class="opcoes-container" style="display: none;">
      <div class="d-flex justify-content-between align-items-center mb-2">
        <label class="form-label fw-bold mb-0">Opções de Resposta</label>
        <button type="button" class="btn btn-outline-primary btn-sm add-opcao">
          <i class="fas fa-plus me-1"></i>
          Adicionar Opção
        </button>
      </div>
      <div class="opcoes-list"></div>
    </div>

    <div class="mb-3">
      <div class="form-check">
        <input class="form-check-input pergunta-obrigatoria" type="checkbox" checked>
        <label class="form-check-label">
          Pergunta obrigatória
        </label>
      </div>
    </div>
  </div>
</template>

<template id="opcao-template">
  <div class="opcao-item d-flex align-items-center mb-2">
    <div class="input-group">
      <span class="input-group-text">
        <i class="fas fa-circle text-muted"></i>
      </span>
      <input type="text" class="form-control opcao-texto" placeholder="Digite a opção...">
      <button type="button" class="btn btn-outline-danger remove-opcao">
        <i class="fas fa-trash"></i>
      </button>
    </div>
  </div>
</template>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let perguntaCount = 0;
  let opcaoCount = 0;
  
  const addPerguntaBtn = document.getElementById('add-pergunta');
  const perguntasContainer = document.getElementById('perguntas-container');
  const perguntaTemplate = document.getElementById('pergunta-template');
  const opcaoTemplate = document.getElementById('opcao-template');
  
  // Adicionar pergunta
  addPerguntaBtn.addEventListener('click', function() {
    perguntaCount++;
    const perguntaHtml = perguntaTemplate.content.cloneNode(true);
    
    // Atualizar número da pergunta
    perguntaHtml.querySelector('.pergunta-number').textContent = perguntaCount;
    
    // Adicionar nomes aos campos
    const perguntaItem = perguntaHtml.querySelector('.pergunta-item');
    const perguntaTexto = perguntaItem.querySelector('.pergunta-texto');
    const perguntaTipo = perguntaItem.querySelector('.pergunta-tipo');
    const perguntaObrigatoria = perguntaItem.querySelector('.pergunta-obrigatoria');
    
    perguntaTexto.name = `perguntas[${perguntaCount}][texto]`;
    perguntaTipo.name = `perguntas[${perguntaCount}][tipo]`;
    perguntaObrigatoria.name = `perguntas[${perguntaCount}][obrigatoria]`;
    
    perguntasContainer.appendChild(perguntaHtml);
    
    // Adicionar event listeners
    setupPerguntaEvents(perguntaItem, perguntaCount);
  });
  
  function setupPerguntaEvents(perguntaItem, perguntaIndex) {
    // Remover pergunta
    perguntaItem.querySelector('.remove-pergunta').addEventListener('click', function() {
      perguntaItem.remove();
      updatePerguntaNumbers();
    });
    
    // Mudança de tipo de pergunta
    const tipoSelect = perguntaItem.querySelector('.pergunta-tipo');
    const opcoesContainer = perguntaItem.querySelector('.opcoes-container');
    
    tipoSelect.addEventListener('change', function() {
      if (this.value === 'multipla_escolha') {
        opcoesContainer.style.display = 'block';
        // Adicionar pelo menos 2 opções
        if (perguntaItem.querySelectorAll('.opcao-item').length === 0) {
          addOpcao(perguntaItem, perguntaIndex);
          addOpcao(perguntaItem, perguntaIndex);
        }
      } else {
        opcoesContainer.style.display = 'none';
      }
    });
    
    // Adicionar opção
    perguntaItem.querySelector('.add-opcao').addEventListener('click', function() {
      addOpcao(perguntaItem, perguntaIndex);
    });
  }
  
  function addOpcao(perguntaItem, perguntaIndex) {
    const opcoesList = perguntaItem.querySelector('.opcoes-list');
    const opcaoHtml = opcaoTemplate.content.cloneNode(true);
    
    const opcaoTexto = opcaoHtml.querySelector('.opcao-texto');
    const opcaoIndex = perguntaItem.querySelectorAll('.opcao-item').length + 1;
    
    opcaoTexto.name = `perguntas[${perguntaIndex}][opcoes][${opcaoIndex}]`;
    
    opcoesList.appendChild(opcaoHtml);
    
    // Remover opção
    opcaoHtml.querySelector('.remove-opcao').addEventListener('click', function() {
      opcaoHtml.remove();
    });
  }
  
  function updatePerguntaNumbers() {
    const perguntas = perguntasContainer.querySelectorAll('.pergunta-item');
    perguntas.forEach((pergunta, index) => {
      pergunta.querySelector('.pergunta-number').textContent = index + 1;
    });
  }
  
  // Adicionar primeira pergunta automaticamente
  addPerguntaBtn.click();
});
</script>

<style>
.pergunta-item {
  transition: all 0.3s ease;
}

.pergunta-item:hover {
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.opcao-item {
  transition: all 0.3s ease;
}

.form-label {
  color: #495057;
  font-size: 0.875rem;
}

.input-group-text {
  background-color: #f8f9fa;
  border-color: #dee2e6;
}

.btn-outline-primary:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.card {
  border: 1px solid #e3e6f0;
  border-radius: 0.75rem;
  box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
}
</style>
